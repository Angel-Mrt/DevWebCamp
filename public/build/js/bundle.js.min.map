{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","hora","removeEventListener","seleccionarHora","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","outerText","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","normalize","replace","ponenteNombre","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n        \r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n        \r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '',\r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n\r\n        if (!Object.values(busqueda).includes('')) {\r\n            ( async () => {\r\n            await buscarEventos();\r\n\r\n            //Resaltar la hora actual\r\n            const id = inputHiddenHora.value;\r\n            const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n\r\n            horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n            horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n            \r\n            horaSeleccionada.onclick = seleccionarHora;\r\n            })()\r\n        }\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value; \r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n            if (Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n            buscarEventos();\r\n        }\r\n        //consultar en la API\r\n        async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`\r\n            \r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n        function obtenerHorasDisponibles(eventos) {\r\n            //Reiniciar las horas \r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            // Remover el evento listener\r\n            const horasDeshabilitadas = document.querySelectorAll('#horas li');\r\n            horasDeshabilitadas.forEach(hora => hora.removeEventListener('click', seleccionarHora));\r\n\r\n            // comprobar eventos  ya tomados, y quitar la variable de deshabilitada\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId))\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Deshabilita la hora previa si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n            //Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            //llenar el campo oculto de dia\r\n\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n            \r\n        }\r\n    }\r\n\r\n\r\n})();","(function () {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if (ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n        if (ponenteHidden.value) {\r\n            (async () => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                const { nombre, apellido } = ponente;\r\n                \r\n                //Insertar en el HTML\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n                ponentesInput.value = `${nombre} ${apellido}`;\r\n            })()\r\n        }\r\n        async function obtenerPonentes() {\r\n\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            formatearPonentes(resultado);\r\n            \r\n        }\r\n        async function obtenerPonente(id) {\r\n\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            return resultado;\r\n            \r\n        }\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n            if (busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"), \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    ponenteNombre = ponente.nombre.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\r\n                    if (ponenteNombre.search(expresion) != -1) {\r\n                        return ponente;\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n            mostrarPonentes();\r\n        }\r\n        function mostrarPonentes() {\r\n            while (listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n            if (ponentesFiltrados.length > 0) {\r\n\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                    //añadir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent = 'No hay Resultados';\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n        }\r\n        function seleccionarPonente(e) {\r\n\r\n            ponentesInput.value = e.target.outerText;\r\n            const ponente = e.target;\r\n            //remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if (ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name= \"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        //Recuperar del input Oculto\r\n        if (tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            if (e.keyCode === 44) {\r\n                if (e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n            actualizarInputHidden();\r\n        }\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()"]}